// <auto-generated />
using System;
using FeirasLivres.Infrastructure.Data.DbCtx;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FeirasLivres.Infrastructure.Data.Migrations
{
    [DbContext(typeof(FeirasLivresDbContext))]
    [Migration("20221025134631_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.10");

            modelBuilder.Entity("FeirasLivres.Domain.Entities.DistritoEntity.Distrito", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("TS01_id_Distrito");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("char")
                        .HasColumnName("cd_Distrito")
                        .IsFixedLength();

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar")
                        .HasColumnName("no_Distrito");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.ToTable("TS01_Distrito", (string)null);
                });

            modelBuilder.Entity("FeirasLivres.Domain.Entities.FeiraEntity.Feira", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("TP01_id_Feira")
                        .HasColumnOrder(1);

                    b.Property<string>("AreaDePonderacaoIBGE")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("char")
                        .HasColumnName("cd_AreaDePonderacaoIBGE")
                        .IsFixedLength();

                    b.Property<Guid>("DistritoId")
                        .HasColumnType("TEXT")
                        .HasColumnName("TS01_id_Distrito");

                    b.Property<string>("EnderecoBairro")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar")
                        .HasColumnName("tx_EnderecoBairro");

                    b.Property<string>("EnderecoLogradouro")
                        .IsRequired()
                        .HasMaxLength(34)
                        .HasColumnType("varchar")
                        .HasColumnName("tx_EnderecoLogradouro");

                    b.Property<string>("EnderecoNumero")
                        .HasMaxLength(5)
                        .HasColumnType("varchar")
                        .HasColumnName("tx_EnderecoNumero");

                    b.Property<string>("EnderecoReferencia")
                        .HasMaxLength(24)
                        .HasColumnType("varchar")
                        .HasColumnName("tx_EnderecoReferencia");

                    b.Property<double>("Latitude")
                        .HasColumnType("REAL")
                        .HasColumnName("nu_Latitude");

                    b.Property<double>("Longitude")
                        .HasColumnType("REAL")
                        .HasColumnName("nu_Longitude");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar")
                        .HasColumnName("no_Feira")
                        .IsFixedLength();

                    b.Property<string>("NumeroRegistro")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("char")
                        .HasColumnName("nu_Registro")
                        .IsFixedLength();

                    b.Property<int>("Regiao5")
                        .HasColumnType("INTEGER")
                        .HasColumnName("cd_Regiao5")
                        .HasComment("1: Norte | 2: Leste | 3: Sul | 4: Oeste | 5: Centro");

                    b.Property<int>("Regiao8")
                        .HasColumnType("INTEGER")
                        .HasColumnName("cd_Regiao8")
                        .HasComment("11: Norte1 | 12: Norte2 | 21: Leste1 | 22: Leste2 | 31: Sul1 | 32: Sul2 | 4: Oeste | 5: Centro");

                    b.Property<string>("SetorCensitarioIBGE")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("char")
                        .HasColumnName("cd_SetorCensitarioIBGE")
                        .IsFixedLength();

                    b.Property<Guid>("SubPrefeituraId")
                        .HasColumnType("TEXT")
                        .HasColumnName("TS02_id_SubPrefeitura");

                    b.HasKey("Id");

                    b.HasIndex("DistritoId");

                    b.HasIndex("NumeroRegistro")
                        .IsUnique();

                    b.HasIndex("SubPrefeituraId");

                    b.ToTable("TP01_Feira", (string)null);
                });

            modelBuilder.Entity("FeirasLivres.Domain.Entities.SubPrefeituraEntity.SubPrefeitura", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("TS02_id_SubPrefeitura");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar")
                        .HasColumnName("cd_SubPrefeitura");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar")
                        .HasColumnName("no_SubPrefeitura");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.ToTable("TS02_SubPrefeitura", (string)null);
                });

            modelBuilder.Entity("FeirasLivres.Domain.Entities.FeiraEntity.Feira", b =>
                {
                    b.HasOne("FeirasLivres.Domain.Entities.DistritoEntity.Distrito", "Distrito")
                        .WithMany()
                        .HasForeignKey("DistritoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FeirasLivres.Domain.Entities.SubPrefeituraEntity.SubPrefeitura", "SubPrefeitura")
                        .WithMany()
                        .HasForeignKey("SubPrefeituraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Distrito");

                    b.Navigation("SubPrefeitura");
                });
#pragma warning restore 612, 618
        }
    }
}
